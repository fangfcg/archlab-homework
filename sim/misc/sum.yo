                      | # Fang Chenguang 2015013232
                      | 
  0x000:              | .pos 0
  0x000:              | init: 
  0x000: 30f400010000 |     irmovl Stack, %esp  	# Set up stack pointer
  0x006: 30f500010000 | 	irmovl Stack, %ebp  	# Set up base pointer
  0x00c: 702c000000   |     jmp Main
                      | 
                      | # Sample linked list
  0x014:              | .align 4 
  0x014:              | ele1:
  0x014: 0a000000     |     .long 0x00a
  0x018: 1c000000     |     .long ele2
  0x01c:              | ele2:
  0x01c: b0000000     |     .long 0x0b0
  0x020: 24000000     |     .long ele3
  0x024:              | ele3:
  0x024: 000c0000     |     .long 0xc00
  0x028: 00000000     |     .long 0
                      | 
  0x02c:              | Main:
  0x02c: 30f014000000 |     irmovl ele1, %eax
  0x032: a00f         |     pushl %eax
  0x034: 803a000000   |     call sumList
  0x039: 00           |     halt
                      | 
                      | #sumList function return the sum of linked list
  0x03a:              | sumList:
  0x03a: a05f         |     pushl %ebp
  0x03c: 2045         |     rrmovl %esp, %ebp
  0x03e: 501508000000 |     mrmovl 8(%ebp), %ecx
  0x044: 6100         |     subl %eax, %eax    # eax <- 0
                      |     
  0x046:              | loop:
  0x046: 6211         |     andl %ecx, %ecx    # if ecx == 0, return
  0x048: 736a000000   |     je quit
  0x04d: 502100000000 |     mrmovl (%ecx), %edx
  0x053: 6020         |     addl %edx, %eax
  0x055: 30f304000000 |     irmovl $4, %ebx
  0x05b: 6031         |     addl %ebx, %ecx
  0x05d: 503100000000 |     mrmovl (%ecx), %ebx
  0x063: 2031         |     rrmovl %ebx, %ecx
  0x065: 7046000000   |     jmp loop
                      | 
  0x06a:              | quit:
  0x06a: 2054         |     rrmovl %ebp, %esp
  0x06c: b05f         |     popl %ebp
  0x06e: 90           |     ret
                      | 
  0x100:              | .pos 0x100
  0x100:              | Stack:
